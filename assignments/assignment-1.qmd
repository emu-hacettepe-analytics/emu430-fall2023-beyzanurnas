---

title: "EMU 430 23/24 FALL - Assignment 1"

---
# EMU 430 23/24 FALL - Assignment 1


# (a)

## Video : 

[*R, Python, and Tableau: A Love Triangle*](https://www.rstudio.com/conference/2022/talks/r-python-tableau-love-triangle/)

## Summary:

Tableau is an excellent data visualization tool but it is often the case that users want to access more advanced analytic capabilities in their Tableau dashboard. In this video we get an example on how new open-source packages enable R, Python, Tableau and RStudio Connect to work together.

# (b)

1.   **Indexing**

    Indices in R is as follows: 1, 2, 3,.....

    Whereas indices in Python is as follows: 0, 1, 2,...

    This difference comes from the fact that R is not developed by computer scientist like other languages including Python. In computer science it is common for people to easily say that the first element of an array has the index of 0.

    ```{python}
    # in Python x[1] gives the second element of list x, 2

    x = [1, 2, 3, 4, 5, 6, 7]
    print(x[1])

    ```

    ```{r}
    # in R x[1] gives the first element of vector x, 1

    x <- c(1, 2, 3, 4, 5, 6, 7)  
    print(x[1])


    ```

2.   **Slicing**

    ```{python}
    # when slicing in Python upper range argument index is excluded therefore x[3:5] gives the 4th and 5th elements (indices 3 and 4)

    x = [1, 2, 3, 4, 5, 6, 7]
    print(x[3:5])
    ```

    {r}
    # In R x[3:5] gives 3, 4, 5

    x <- c(1, 2, 3, 4, 5, 6, 7)  
    print(x[3:5])


    

    3.  **Coercion**

        With R, when an entry does not match the expected, R tries to guess what we meant before throwing in an error.

    ```{r}
    x <- c(1, "Canada", 3)
    print(x)
    class(x)
    ```

# (c)

```{r}
# import the necessary data from related library

library(dslabs)
data(na_example)
print(na_example)
```

```{r}
# is.na(na_example) will return the value 1 for every NA observation and 0 o.w.

sum(is.na(na_example))  
```

```{r}
# assign 0 to NA values

no_nas <- ifelse(is.na(na_example), 0, na_example)
print(no_nas <- ifelse(is.na(na_example), 0, na_example))

```

```{r}
# count NA oobservations again

sum(is.na(no_nas))

```
